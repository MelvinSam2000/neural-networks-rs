
ANN:

func ff(x: Vec<X>) -> Vec<Y> {
    z = Wx + b
    ret s(z)
}

func bp(g: Vec<Y>) -> Vec<X> {
    g = s'(z) (*) g      // elementwise product
    dW = g * x^t
    db = g
    out = W^t * g
    update_param(&W, dW)
    update_param(&b, db)
    ret out
}

CNN: 

// below is conv layer, maxpooling is more coding oriented

func ff(X: Matrix<RX, CX>) -> Matrix<RY, CY> {
    ret conv(X, W)
}

func bp(G: Matrix<RY, CY>) -> Matrix<X, N> {
    dW = gradconv(X, G)
    update_param(&W, dW)
    ret conv(W, G)
}

